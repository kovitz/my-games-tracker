{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nlet HighchartsChartComponent = /*#__PURE__*/(() => {\n  class HighchartsChartComponent {\n    constructor(el, _zone // #75\n    ) {\n      this.el = el;\n      this._zone = _zone;\n      this.updateChange = new EventEmitter(true);\n      this.chartInstance = new EventEmitter(); // #26\n    }\n    ngOnChanges(changes) {\n      const update = changes.update && changes.update.currentValue;\n      if (changes.options || update) {\n        this.wrappedUpdateOrCreateChart();\n        if (update) {\n          this.updateChange.emit(false); // clear the flag after update\n        }\n      }\n    }\n    wrappedUpdateOrCreateChart() {\n      if (this.runOutsideAngular) {\n        this._zone.runOutsideAngular(() => {\n          this.updateOrCreateChart();\n        });\n      } else {\n        this.updateOrCreateChart();\n      }\n    }\n    updateOrCreateChart() {\n      if (this.chart && this.chart.update) {\n        this.chart.update(this.options, true, this.oneToOne || false);\n      } else {\n        this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null);\n        // emit chart instance on init\n        this.chartInstance.emit(this.chart);\n      }\n    }\n    ngOnDestroy() {\n      if (this.chart) {\n        // #56\n        this.chart.destroy();\n        this.chart = null;\n        // emit chart instance on destroy\n        this.chartInstance.emit(this.chart);\n      }\n    }\n    static #_ = this.ɵfac = function HighchartsChartComponent_Factory(t) {\n      return new (t || HighchartsChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: HighchartsChartComponent,\n      selectors: [[\"highcharts-chart\"]],\n      inputs: {\n        Highcharts: \"Highcharts\",\n        constructorType: \"constructorType\",\n        callbackFunction: \"callbackFunction\",\n        oneToOne: \"oneToOne\",\n        runOutsideAngular: \"runOutsideAngular\",\n        options: \"options\",\n        update: \"update\"\n      },\n      outputs: {\n        updateChange: \"updateChange\",\n        chartInstance: \"chartInstance\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 0,\n      vars: 0,\n      template: function HighchartsChartComponent_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n  return HighchartsChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HighchartsChartModule = /*#__PURE__*/(() => {\n  class HighchartsChartModule {\n    static #_ = this.ɵfac = function HighchartsChartModule_Factory(t) {\n      return new (t || HighchartsChartModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HighchartsChartModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return HighchartsChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of highcharts-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HighchartsChartComponent, HighchartsChartModule };\n//# sourceMappingURL=highcharts-angular.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}