{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { HighchartsChartModule } from 'highcharts-angular';\n//COMPONENTS\nimport { AppComponent } from './app.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { HomeComponent } from './home/home.component';\n//SERVICES\nimport { UserSessionHandler } from './user-session-handler';\nimport { IUserService } from './_services/user.service';\nimport { UserMockService } from './_services/user-mock.service';\nimport { ICategoryService } from './_services/category.service';\nimport { CategoryMockService } from './_services/category-mock.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [UserSessionHandler, {\n        provide: ICategoryService,\n        useClass: CategoryMockService\n      }, {\n        provide: IUserService,\n        useClass: UserMockService\n      }\n      // { provide: ICategoryService, useClass: CategoryMongoService }, \n      // { provide: IUserService, useClass: UserMongoService },\n      // { provide: HIGHCHARTS_MODULES, useFactory: () => [ more, exporting ] } // add as factory to your providers\n      ],\n      imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, HighchartsChartModule]\n    });\n  }\n  return AppModule;\n})();\ni0.ɵɵsetComponentScope(UserProfileComponent, [i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, HomeComponent], []);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}