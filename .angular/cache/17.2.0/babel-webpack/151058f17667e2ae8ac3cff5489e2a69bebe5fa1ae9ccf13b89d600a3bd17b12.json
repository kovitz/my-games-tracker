{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as Highcharts from 'highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user-session-handler\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"highcharts-angular\";\nimport * as i4 from \"../_pipes/normalize-score.pipe\";\nfunction UserRankCardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserRankCardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bonus_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(bonus_r2.comment);\n  }\n}\nexport let UserRankCardComponent = /*#__PURE__*/(() => {\n  class UserRankCardComponent {\n    constructor(userSessionHandler) {\n      this.userSessionHandler = userSessionHandler;\n      this.listRules = [];\n      this.categoryItem = null;\n      this.ruleNames = [];\n      this.scores = [];\n      this.Highcharts = Highcharts;\n      this.chartUpdateFlag = false;\n      //onCardLoaded event\n      this.cardLoaded = new Subject();\n      this.onCardLoaded = this.cardLoaded.asObservable();\n      this.chartOptions = {\n        exporting: {\n          buttons: {\n            contextButton: {\n              enabled: false\n            }\n          }\n        },\n        title: {\n          text: null\n        },\n        tooltip: {\n          enabled: false\n        },\n        credits: {\n          enabled: false\n        },\n        yAxis: {\n          visible: false,\n          min: 0,\n          max: 12,\n          tickInterval: 1\n        },\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              enabled: true\n            }\n          },\n          series: {\n            animation: false,\n            dataLabels: {\n              style: {\n                textOutline: 'none'\n              }\n            }\n          }\n        },\n        chart: {\n          style: {\n            fontFamily: \"'Open Sans Condensed', sans-serif\",\n            fontSize: '16pt',\n            fontWeight: 'bold'\n          },\n          type: 'bar',\n          backgroundColor: 'transparent',\n          // margin: 0,\n          height: '210rem',\n          width: 340 //TODO: add window size dependency: https://stackoverflow.com/questions/39888768/how-to-get-height-and-width-of-device-display-in-angular2-using-typescript\n        },\n        xAxis: {\n          // minPadding: 0,\n          // maxPadding: 0,\n          title: {\n            text: null\n          },\n          gridLineWidth: 0,\n          categories: this.ruleNames,\n          plotLines: [{\n            width: 0\n          }]\n        },\n        series: [{\n          borderRadius: 10,\n          pointWidth: 5,\n          showInLegend: false,\n          type: 'bar',\n          data: this.scores\n        }]\n      };\n    }\n    //this should ONLY trigger from the Home component\n    //if I loaded this with the constructor or ngOnInit, it could cause a race condition with Home\n    set cardInput(value) {\n      this.dumbCard = value;\n      this.categoryItem = this.userSessionHandler.getCategoryItem(value.categoryItemId);\n      this.listRules = this.userSessionHandler.activeList.rules;\n      this.listRules.forEach(rule => {\n        this.ruleNames.push(rule.ruleName);\n      });\n      this.listRules.forEach(rule => {\n        let linkedRank = value.ranks.find(rank => rank.code == rule.code);\n        this.scores.push(linkedRank.score);\n      });\n      this.triggerCardLoaded(value);\n    }\n    triggerCardLoaded(event) {\n      this.cardLoaded.next(event);\n    }\n    getName(code) {\n      return this.listRules.find(x => x.code == code).ruleName;\n    }\n    static #_ = this.ɵfac = function UserRankCardComponent_Factory(t) {\n      return new (t || UserRankCardComponent)(i0.ɵɵdirectiveInject(i1.UserSessionHandler));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserRankCardComponent,\n      selectors: [[\"user-rating-card\"]],\n      inputs: {\n        cardInput: \"cardInput\"\n      },\n      decls: 20,\n      vars: 12,\n      consts: [[1, \"card\"], [\"no-repeat\", \"\", \"center\", \"\", 1, \"thumb\", 3, \"src\"], [1, \"data-container\"], [\"type\", \"checkbox\"], [1, \"header\"], [1, \"title\"], [\"class\", \"stamp\", 4, \"ngIf\"], [1, \"score\"], [1, \"details\"], [\"class\", \"bonuses\", 4, \"ngFor\", \"ngForOf\"], [1, \"ranks\"], [3, \"Highcharts\", \"options\", \"update\", \"updateChange\"], [1, \"link\"], [\"src\", \"/assets/up-arrow.png\", 1, \"arrow\"], [1, \"gradient-fader-bottom\"], [1, \"stamp\"], [1, \"top10stamp\"], [1, \"bonuses\"]],\n      template: function UserRankCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"img\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2);\n          i0.ɵɵelement(3, \"input\", 3);\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\", 5);\n          i0.ɵɵtext(6);\n          i0.ɵɵtemplate(7, UserRankCardComponent_div_7_Template, 2, 0, \"div\", 6);\n          i0.ɵɵpipe(8, \"normalizeScore\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"span\", 7);\n          i0.ɵɵtext(10);\n          i0.ɵɵpipe(11, \"normalizeScore\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 8);\n          i0.ɵɵtemplate(13, UserRankCardComponent_div_13_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"highcharts-chart\", 11);\n          i0.ɵɵtwoWayListener(\"updateChange\", function UserRankCardComponent_Template_highcharts_chart_updateChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.chartUpdateFlag, $event) || (ctx.chartUpdateFlag = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 12);\n          i0.ɵɵtext(17, \"Show Chart \");\n          i0.ɵɵelement(18, \"img\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"div\", 14);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵpropertyInterpolate(\"src\", ctx.categoryItem.thumb, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.categoryItem.title, \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 8, ctx.dumbCard) > 90);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 10, ctx.dumbCard));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.dumbCard.bonusDetails);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"Highcharts\", ctx.Highcharts)(\"options\", ctx.chartOptions);\n          i0.ɵɵtwoWayProperty(\"update\", ctx.chartUpdateFlag);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.HighchartsChartComponent, i4.NormalizeScorePipe],\n      encapsulation: 2\n    });\n  }\n  return UserRankCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}